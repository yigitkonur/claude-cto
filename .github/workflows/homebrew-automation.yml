name: Homebrew Formula and Bottles Automation

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to update to'
        required: true
        type: string
      package_url:
        description: 'PyPI package URL'
        required: true
        type: string
      package_sha256:
        description: 'PyPI package SHA256'
        required: true
        type: string

permissions:
  contents: read

jobs:
  update-formula:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.create_pr.outputs.pr_number }}
      needs_bottles: ${{ steps.check_changes.outputs.needs_bottles }}
    
    steps:
    - name: Update Homebrew tap
      id: update_tap
      env:
        GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        VERSION: ${{ inputs.version }}
        PACKAGE_URL: ${{ inputs.package_url }}
        PACKAGE_SHA256: ${{ inputs.package_sha256 }}
      run: |
        # Configure git
        git config --global user.name "Claude CTO Bot"
        git config --global user.email "bot@claude-cto.dev"
        
        # Clone the Homebrew tap repository
        git clone https://x-access-token:$GH_TOKEN@github.com/yigitkonur/homebrew-claude-cto.git tap
        cd tap
        
        # Create a branch for this update
        BRANCH_NAME="update-claude-cto-$VERSION"
        git checkout -b "$BRANCH_NAME"
        
        # Backup original formula for comparison
        cp Formula/claude-cto.rb Formula/claude-cto.rb.bak
        
        # Update the formula with comprehensive changes
        sed -i "s|url \".*\.tar\.gz\"|url \"$PACKAGE_URL\"|g" Formula/claude-cto.rb
        sed -i "s|sha256 \".*\"|sha256 \"$PACKAGE_SHA256\"|g" Formula/claude-cto.rb
        sed -i "s|claude-cto\[.*\]==.*\"|claude-cto[full]==$VERSION\"|g" Formula/claude-cto.rb
        sed -i "s|assert_match \"[0-9]\+\.[0-9]\+\"|assert_match \"$(echo $VERSION | cut -d. -f1).$(echo $VERSION | cut -d. -f2)\"|g" Formula/claude-cto.rb
        
        # Clear existing bottle block (if any)
        sed -i '/bottle do/,/end/d' Formula/claude-cto.rb
        
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        
        # Check if there are meaningful changes
        if git diff --quiet Formula/claude-cto.rb.bak Formula/claude-cto.rb; then
          echo "No changes needed - formula already up to date"
          echo "has_changes=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "has_changes=true" >> $GITHUB_OUTPUT
        
        # Commit changes
        git add Formula/claude-cto.rb
        git commit -m "Update claude-cto to $VERSION

- Updated PyPI source URL and SHA256 hash  
- Updated pip install version to $VERSION
- Updated test version assertion
- Prepared for bottle building
- Auto-generated by GitHub Actions"
        
        git push origin "$BRANCH_NAME"
        
        echo "✅ Pushed changes to branch $BRANCH_NAME"
    
    - name: Create pull request
      id: create_pr
      if: steps.update_tap.outputs.has_changes == 'true'
      env:
        GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        VERSION: ${{ inputs.version }}
        PACKAGE_URL: ${{ inputs.package_url }}
        PACKAGE_SHA256: ${{ inputs.package_sha256 }}
        BRANCH_NAME: ${{ steps.update_tap.outputs.branch_name }}
      run: |
        # Create pull request with bottle building info
        PR_RESPONSE=$(curl -s -X POST \
          -H "Authorization: token $GH_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/yigitkonur/homebrew-claude-cto/pulls \
          -d "{
            \"title\": \"🤖 Update claude-cto to $VERSION + Build bottles\",
            \"head\": \"$BRANCH_NAME\", 
            \"base\": \"main\",
            \"body\": \"## 🤖 Automated Homebrew Update\\n\\n### 📦 Package Information\\n- **Version**: \`$VERSION\`\\n- **PyPI URL**: $PACKAGE_URL\\n- **SHA256**: \`$PACKAGE_SHA256\`\\n\\n### 🔄 Changes Made\\n- ✅ Updated PyPI source URL and hash\\n- ✅ Updated pip install version constraint\\n- ✅ Updated test assertions\\n- ✅ Prepared formula for bottle building\\n\\n### 🍺 Bottles Status\\n- 🔄 **Building**: macOS ARM64 (Apple Silicon)\\n- 🔄 **Building**: macOS x86_64 (Intel)\\n- 🔄 **Building**: Linux x86_64\\n\\n### 🚀 What happens next\\n1. Bottles will be built automatically\\n2. Bottle SHA256 hashes will be added to formula\\n3. PR will be auto-merged when bottles are ready\\n4. Homebrew users get immediate binary installs\\n\\n---\\n\\n**Generated by**: GitHub Actions Homebrew Automation\\n**Triggered by**: Main repository PyPI publish\"
          }")
        
        # Extract PR number for bottle building
        PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')
        echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        echo "✅ Created PR #$PR_NUMBER for claude-cto $VERSION"
    
    - name: Check if bottles needed
      id: check_changes
      run: |
        # Bottles are always needed for new versions
        echo "needs_bottles=true" >> $GITHUB_OUTPUT

  build-bottles:
    name: Build Homebrew Bottles
    needs: update-formula
    if: needs.update-formula.outputs.needs_bottles == 'true' && needs.update-formula.outputs.pr_number != ''
    strategy:
      matrix:
        include:
          - runner: macos-13        # Intel macOS
            arch: x86_64
            os: monterey
          - runner: macos-14        # Apple Silicon macOS  
            arch: arm64
            os: sonoma
          - runner: ubuntu-latest   # Linux x86_64
            arch: x86_64  
            os: linux
    runs-on: ${{ matrix.runner }}
    
    steps:
    - name: Set up Homebrew (macOS)
      if: runner.os == 'macOS'
      run: |
        # Homebrew should already be installed on macOS runners
        brew --version
        
        # Add our tap
        brew tap yigitkonur/claude-cto
        
        # Checkout the PR branch
        cd $(brew --repo yigitkonur/claude-cto)
        git fetch origin pull/${{ needs.update-formula.outputs.pr_number }}/head:pr-${{ needs.update-formula.outputs.pr_number }}
        git checkout pr-${{ needs.update-formula.outputs.pr_number }}
    
    - name: Set up Homebrew (Linux) 
      if: runner.os == 'Linux'
      run: |
        # Install Homebrew on Linux
        NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        
        # Add to PATH
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bashrc
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        
        # Add our tap
        brew tap yigitkonur/claude-cto
        
        # Checkout the PR branch
        cd $(brew --repo yigitkonur/claude-cto)
        git fetch origin pull/${{ needs.update-formula.outputs.pr_number }}/head:pr-${{ needs.update-formula.outputs.pr_number }}
        git checkout pr-${{ needs.update-formula.outputs.pr_number }}
    
    - name: Install dependencies
      run: |
        # Install build dependencies
        if [[ "${{ runner.os }}" == "macOS" ]]; then
          # macOS dependencies
          brew install python@3.12 node
        else
          # Linux dependencies  
          brew install gcc python@3.12 node
        fi
    
    - name: Build bottle
      id: build
      run: |
        # Build the bottle
        brew install --build-bottle yigitkonur/claude-cto/claude-cto
        
        # Create the bottle
        brew bottle --json yigitkonur/claude-cto/claude-cto
        
        # Get bottle info
        BOTTLE_FILE=$(ls *.bottle.tar.gz | head -1)
        BOTTLE_SHA=$(shasum -a 256 "$BOTTLE_FILE" | cut -d' ' -f1)
        
        echo "bottle_file=$BOTTLE_FILE" >> $GITHUB_OUTPUT  
        echo "bottle_sha=$BOTTLE_SHA" >> $GITHUB_OUTPUT
        
        # Upload bottle as artifact
        echo "✅ Built bottle: $BOTTLE_FILE (SHA256: $BOTTLE_SHA)"
    
    - name: Upload bottle artifact
      uses: actions/upload-artifact@v4
      with:
        name: bottle-${{ matrix.os}}-${{ matrix.arch }}
        path: "*.bottle.tar.gz"
        retention-days: 30
    
    - name: Save bottle metadata
      run: |
        # Create metadata file
        cat > bottle-metadata.json << EOF
        {
          "os": "${{ matrix.os }}",
          "arch": "${{ matrix.arch }}",
          "filename": "${{ steps.build.outputs.bottle_file }}",
          "sha256": "${{ steps.build.outputs.bottle_sha }}",
          "runner": "${{ matrix.runner }}"
        }
        EOF
    
    - name: Upload bottle metadata
      uses: actions/upload-artifact@v4
      with:
        name: bottle-metadata-${{ matrix.os}}-${{ matrix.arch }}
        path: bottle-metadata.json
        retention-days: 30

  upload-bottles-and-merge:
    name: Upload Bottles and Merge PR
    needs: [update-formula, build-bottles]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Download all bottle artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: bottle-*
        merge-multiple: true
    
    - name: Set up GitHub CLI
      run: |
        gh version || (curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update && sudo apt install gh)
    
    - name: Upload bottles to GitHub Releases
      env:
        GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        VERSION: ${{ inputs.version }}
      run: |
        # Create release if it doesn't exist
        gh release create "v$VERSION" \
          --repo yigitkonur/homebrew-claude-cto \
          --title "claude-cto $VERSION bottles" \
          --notes "Homebrew bottles for claude-cto $VERSION" \
          --draft || echo "Release may already exist"
        
        # Upload all bottle files
        for bottle in *.bottle.tar.gz; do
          if [[ -f "$bottle" ]]; then
            echo "Uploading $bottle..."
            gh release upload "v$VERSION" "$bottle" \
              --repo yigitkonur/homebrew-claude-cto \
              --clobber
          fi
        done
        
        echo "✅ Uploaded all bottles to release v$VERSION"
    
    - name: Update formula with bottle block
      env:
        GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        VERSION: ${{ inputs.version }}
        PR_NUMBER: ${{ needs.update-formula.outputs.pr_number }}
      run: |
        # Clone tap repository
        git config --global user.name "Claude CTO Bot"
        git config --global user.email "bot@claude-cto.dev"
        
        git clone https://x-access-token:$GH_TOKEN@github.com/yigitkonur/homebrew-claude-cto.git tap
        cd tap
        
        # Checkout PR branch
        git fetch origin pull/$PR_NUMBER/head:pr-$PR_NUMBER
        git checkout pr-$PR_NUMBER
        
        # Build bottle block from metadata
        echo "  bottle do" >> bottle_block.rb
        
        # Process each bottle metadata
        for metadata in ../bottle-metadata*.json; do
          if [[ -f "$metadata" ]]; then
            OS=$(jq -r '.os' "$metadata")
            ARCH=$(jq -r '.arch' "$metadata") 
            SHA=$(jq -r '.sha256' "$metadata")
            
            # Map to Homebrew bottle format
            case "$OS-$ARCH" in
              "sonoma-arm64")
                echo "    sha256 cellar: :any_skip_relocation, arm64_sonoma: \"$SHA\"" >> bottle_block.rb
                ;;
              "monterey-x86_64")
                echo "    sha256 cellar: :any_skip_relocation, monterey: \"$SHA\"" >> bottle_block.rb
                ;;  
              "linux-x86_64")
                echo "    sha256 cellar: :any_skip_relocation, x86_64_linux: \"$SHA\"" >> bottle_block.rb
                ;;
            esac
          fi
        done
        
        echo "  end" >> bottle_block.rb
        
        # Insert bottle block after license line
        sed -i '/license "MIT"/r bottle_block.rb' Formula/claude-cto.rb
        
        # Commit bottle block
        git add Formula/claude-cto.rb
        git commit -m "Add bottles for claude-cto $VERSION

- Added bottle SHA256 hashes for all architectures
- Bottles uploaded to GitHub Releases v$VERSION
- Ready for merge and distribution

Auto-generated by GitHub Actions bottle workflow"
        
        git push origin pr-$PR_NUMBER
        
        echo "✅ Updated formula with bottle block"
    
    - name: Auto-merge PR
      env:
        GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        PR_NUMBER: ${{ needs.update-formula.outputs.pr_number }}
      run: |
        # Enable auto-merge on the PR
        gh pr merge $PR_NUMBER \
          --repo yigitkonur/homebrew-claude-cto \
          --squash \
          --delete-branch \
          --admin
        
        echo "✅ Auto-merged PR #$PR_NUMBER"
    
    - name: Update PR with success status
      env:
        GH_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
        PR_NUMBER: ${{ needs.update-formula.outputs.pr_number }}
        VERSION: ${{ inputs.version }}
      run: |
        # Add success comment
        gh pr comment $PR_NUMBER \
          --repo yigitkonur/homebrew-claude-cto \
          --body "## ✅ Bottles Built Successfully!

### 🍺 Available Bottles
- ✅ **macOS ARM64** (Apple Silicon) - Ready
- ✅ **macOS Intel** (x86_64) - Ready  
- ✅ **Linux x86_64** - Ready

### 📦 Installation
Users can now install claude-cto $VERSION with fast binary installs:

\`\`\`bash
# Add tap (first time only)
brew tap yigitkonur/claude-cto

# Install with bottles (fast!)
brew install claude-cto

# Verify installation
claude-cto --version
\`\`\`

### 🚀 What's Next
- Formula has been updated with bottle SHA256 hashes
- PR will be merged automatically
- Homebrew users get immediate binary installs
- No more waiting for compilation!

---

**Automation Status**: ✅ **COMPLETE**"
        
        echo "✅ Added success comment to PR"